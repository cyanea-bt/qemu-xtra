diff -ru ../dosbox-code-0/src/gui/sdlmain.cpp ./src/gui/sdlmain.cpp
--- ../dosbox-code-0/src/gui/sdlmain.cpp	2022-05-08 20:15:40.000000000 -0700
+++ ./src/gui/sdlmain.cpp	2022-05-08 20:08:29.000000000 -0700
@@ -2821,6 +2821,25 @@
 #endif
 }
 
+static void kbrst_quit(void)
+{
+#if defined (WIN32)
+	sticky_keys(true); //Might not be needed if the shutdown function switches to windowed mode, but it doesn't hurt
+#endif
+	//Force visible mouse to end user. Somehow this sometimes doesn't happen
+	SDL_WM_GrabInput(SDL_GRAB_OFF);
+	SDL_ShowCursor(SDL_ENABLE);
+
+	SDL_Quit();//Let's hope sdl will quit as well when it catches an exception
+#ifdef OS2
+        DosGetInfoBlocks(&tib, &pib);
+        if (pib->pib_ultype == 3)
+        	pib->pib_ultype = 2;
+#endif
+        exit(0);
+}
+void *kbrst_quit_handler(void) { return (void *)&kbrst_quit; }
+
 void GFX_GetSize(int &width, int &height, bool &fullscreen) {
 	width = sdl.draw.width;
 	height = sdl.draw.height;
diff -ru ../dosbox-code-0/src/hardware/keyboard.cpp ./src/hardware/keyboard.cpp
--- ../dosbox-code-0/src/hardware/keyboard.cpp	2022-05-08 19:44:43.000000000 -0700
+++ ./src/hardware/keyboard.cpp	2022-05-08 20:07:32.000000000 -0700
@@ -214,6 +214,14 @@
 	case 0xd1:		/* Write to outport */
 		keyb.command=CMD_SETOUTPORT;
 		break;
+        case 0xfe:
+                do {
+                    void *kbrst_quit_handler(void);
+                    void (*kbrst_quit)(void);
+                    kbrst_quit = (void (*)(void))kbrst_quit_handler();
+                    kbrst_quit();
+                } while(0);
+                break;
 	default:
 		LOG(LOG_KEYBOARD,LOG_ERROR)("Port 64 write with val %" sBitfs(X) ,val);
 		break;
